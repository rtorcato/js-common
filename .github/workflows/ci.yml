name: 🚀 CI/CD Pipeline

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: write
    issues: write
    pull-requests: write
    id-token: write

jobs:
    check-skip:
        runs-on: ubuntu-latest
        outputs:
            should-skip: ${{ steps.skip-check.outputs.should-skip }}
        steps:
            - name: Check for skip CI
              id: skip-check
              run: |
                  if [[ "${{ github.event.head_commit.message }}" =~ \[(ci skip|skip ci)\] ]]; then
                    echo "should-skip=true" >> $GITHUB_OUTPUT
                  else
                    echo "should-skip=false" >> $GITHUB_OUTPUT
                  fi

    dependencies:
        runs-on: ubuntu-latest
        needs: check-skip
        if: needs.check-skip.outputs.should-skip != 'true'
        outputs:
            cache-key: ${{ steps.cache-key.outputs.key }}
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Generate cache key
              id: cache-key
              run: echo "key=${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

            - name: 📦 Cache dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ steps.cache-key.outputs.key }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: 📦 Install dependencies
              run: pnpm install --frozen-lockfile

    lint:
        runs-on: ubuntu-latest
        needs: [dependencies, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 🔍 Run linting
              run: pnpm run check

    commitlint:
        runs-on: ubuntu-latest
        needs: [dependencies, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true' && github.event_name == 'pull_request'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 📝 Validate commit messages
              run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

    typecheck:
        runs-on: ubuntu-latest
        needs: [dependencies, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 🔍 Type check
              run: pnpm typecheck

    test:
        runs-on: ubuntu-latest
        needs: [dependencies, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22'

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 🧪 Run tests
              run: pnpm test

    build:
        runs-on: ubuntu-latest
        needs: [dependencies, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 🏗️ Build project
              run: pnpm run build-prod

            - name: 📦 Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts
                  path: |
                      dist/
                      package.json
                      README.md
                  retention-days: 7

    release:
        runs-on: ubuntu-latest
        needs: [dependencies, lint, typecheck, test, build, check-skip]
        if: needs.check-skip.outputs.should-skip != 'true' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: 📦 Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "22"
                  registry-url: https://registry.npmjs.org

            - name: 📦 Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: latest

            - name: 📦 Restore dependencies cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.pnpm-store
                      node_modules
                  key: ${{ needs.dependencies.outputs.cache-key }}

            - name: 🔧 Configure Git
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            - name: 🏗️ Build for release
              run: pnpm run build-prod

            - name: 🚀 Run semantic-release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: npx semantic-release
